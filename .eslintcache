[{"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/index.js":"1","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/App.js":"2","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/reportWebVitals.js":"3","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/NavigationBar.js":"4","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/names.js":"5","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/services/nameService.js":"6","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/Names.js":"7","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/Row.js":"8"},{"size":506,"mtime":1611239014296,"results":"9","hashOfConfig":"10"},{"size":368,"mtime":1611239854667,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611169400359,"results":"12","hashOfConfig":"10"},{"size":605,"mtime":1611232235651,"results":"13","hashOfConfig":"10"},{"size":4095,"mtime":1611232785515,"results":"14","hashOfConfig":"10"},{"size":162,"mtime":1611239169823,"results":"15","hashOfConfig":"10"},{"size":3767,"mtime":1611248041927,"results":"16","hashOfConfig":"10"},{"size":224,"mtime":1611248010897,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15p68uj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/index.js",[],["38","39"],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/App.js",[],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/reportWebVitals.js",[],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/NavigationBar.js",[],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/names.js",["40"],"import React, {useEffect, useState} from 'react';\nimport nameService from '../services/nameService';\nimport Table from 'react-bootstrap/Table'\nimport {\n  FormControl,\n  Form,\n  InputGroup\n} from \"react-bootstrap\";\nconst Names = () => {\n\n  const [items, setItems] = useState([]);\n  const [checked, setChecked] = useState('mostPopularFirst');\n  const [newFilter, setNewFilter] = useState('');\n\n  const handleSetChecked = (e) => {\n    setChecked(e.target.value);\n  };\n\n  //handle user input in the search field\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // get items\n  useEffect(() => {\n    nameService.getNames().then(result => {\n      setItems(result);\n    });\n  }, []);\n\n  const allNames = items.length;\n\n\n  // Sort by amount (lowest to highest) then reverse to be highest to lowest\n  const rowsByAmount = items.sort(function(a, b) {\n    return a.amount - b.amount;\n  }) .filter(item =>\n      item.name.toLowerCase().includes(newFilter.toLowerCase())\n  ).reverse().map(item => {\n    return (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.name}</td>\n          <td>{item.amount}</td>\n        </tr>\n    );\n  });\n\n\n  // Sort names alphabetically\n  const rowsByName = items.sort(function(a, b) {\n    return a.name.localeCompare(b.name);\n  }).filter(item =>\n      item.name.toLowerCase().includes(newFilter.toLowerCase())\n  ).map(item => {\n    return (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.name}</td>\n          <td>{item.amount}</td>\n        </tr>\n    );\n  });\n\n  /*\n  //const byAmountHighToLow = byAmountLowToHigh.reverse();\n// Sort by amount (lowest to highest)\n  const resultRows = items.map(item => {\n    return (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.name}</td>\n          <td>{item.amount}</td>\n        </tr>\n    );\n  });\n  */\n\n  //console.log(\"sorted by name\",rowsByName);\n  //console.log(\"sorted by amount\",byAmountLowToHigh);\n\n  return(\n      <div style={{marginTop: '80px'}}>\n        <h3>Welcome to SOLITA names application</h3>\n        <p>Here you can find the top-10 of both male and female names in Solita.</p>\n        <p>You can list the names alphabetically or by their amount (the most popular first), also\n          you can use the input field to filter for a specific name/names and get their info.</p>\n        <hr/>\n        <h4>Listing options</h4>\n\n        <div className=\"radio\" onChange={handleSetChecked}>\n          <label>\n            <input type=\"radio\" name=\"radio\" value=\"mostPopularFirst\"\n                   checked={checked=== 'mostPopularFirst'}\n                   onChange={handleSetChecked}\n                   />\n            List by amount (most popular first)\n          </label>\n        </div>\n        <div className=\"radio\">\n          <label>\n            <input type=\"radio\" name=\"radio\" value=\"namesAlpha\"\n                   checked={checked === 'namesAlpha'}\n                   onChange={handleSetChecked}\n\n                   />\n            List names alphabetically\n          </label>\n        </div>\n\n\n        {/*<p>now checked : {checked} </p>*/}\n\n        <hr/>\n        <h4>Filter by name</h4>\n        <Form inline>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">Name</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n                placeholder=\"Input a name\"\n                aria-label=\"Username\"\n                aria-describedby=\"basic-addon1\"\n                value={newFilter}\n                onChange={handleFilterChange}\n            />\n          </InputGroup>\n        </Form>\n        <hr/>\n\n\n\n        <p>All names: {allNames} </p>\n        <Table responsive striped hover>\n          <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Amount</th>\n          </tr>\n          </thead>\n          <tbody>\n\n          {checked==='mostPopularFirst' ? rowsByAmount : rowsByName}\n\n          </tbody>\n        </Table>\n      </div>\n\n  );\n};\nexport default Names;",["41","42"],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/services/nameService.js",["43"],"import axios from 'axios';\n\nconst getNames = () => {\n  const request = axios.get('/names');\n  return request.then(res => res.data);\n};\n\nexport default {getNames};","/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/Names.js",[],"/Users/abdullah.hinnawi/WebstormProjects/solita-names/src/components/Row.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":36,"column":24,"nodeType":"50","messageId":"51","endLine":38,"endColumn":13,"fix":"52"},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":1,"nodeType":"57","endLine":8,"endColumn":27},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-whitespace-before-property","Unexpected whitespace before property filter.","MemberExpression","unexpectedWhitespace",{"range":"60","text":"61"},["58"],["59"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[950,952],"."]